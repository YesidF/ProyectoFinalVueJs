{"remainingRequest":"C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\src\\components\\FormularioRegistro.vue?vue&type=template&id=34cbfff5&","dependencies":[{"path":"C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\src\\components\\FormularioRegistro.vue","mtime":1633842721774},{"path":"C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\proyecto\\aprendiendo-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}